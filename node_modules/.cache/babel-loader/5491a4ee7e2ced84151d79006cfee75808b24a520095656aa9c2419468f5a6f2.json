{"ast":null,"code":"var _jsxFileName = \"/Users/chazdooley/Desktop/Team04-02-Front/src/chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './chatbot.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: 'bot',\n    text: 'Hello! How can I help you today?'\n  }]);\n  const [userInput, setUserInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false); // State to track widget visibility\n\n  const conversationRef = useRef(null); // Create a reference for the chat area\n\n  const handleSendMessage = () => {\n    if (userInput.trim() === '') return;\n    const newMessages = [...messages, {\n      sender: 'user',\n      text: userInput\n    }];\n    setMessages(newMessages);\n    setUserInput(''); // Clear input box\n\n    // Simulate a bot response (AI logic can go here)\n    setTimeout(() => {\n      setMessages(prevMessages => [...prevMessages, {\n        sender: 'bot',\n        text: 'This is an automated response.'\n      }]);\n    }, 1000);\n  };\n\n  // Scroll to the bottom whenever the messages array is updated\n  useEffect(() => {\n    if (conversationRef.current) {\n      conversationRef.current.scrollTop = conversationRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  // Toggle chatbot visibility\n  const toggleChatbot = () => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chat-button\",\n      onClick: toggleChatbot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chatbot-widget card ${isOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"AI Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body chatbot-conversation\",\n        ref: conversationRef,\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `bubble ${message.sender}`,\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-footer d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control me-2\",\n          placeholder: \"Type your message...\",\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && handleSendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Chatbot, \"ZlJZmXdVZfdQgW+Kot/xw5B/+hY=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","_s","messages","setMessages","sender","text","userInput","setUserInput","isOpen","setIsOpen","conversationRef","handleSendMessage","trim","newMessages","setTimeout","prevMessages","current","scrollTop","scrollHeight","toggleChatbot","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","message","index","type","placeholder","value","onChange","e","target","onKeyDown","key","_c","$RefreshReg$"],"sources":["/Users/chazdooley/Desktop/Team04-02-Front/src/chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './chatbot.css';\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([\n    { sender: 'bot', text: 'Hello! How can I help you today?' }\n  ]);\n  const [userInput, setUserInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false); // State to track widget visibility\n\n  const conversationRef = useRef(null); // Create a reference for the chat area\n\n  const handleSendMessage = () => {\n    if (userInput.trim() === '') return;\n\n    const newMessages = [...messages, { sender: 'user', text: userInput }];\n    setMessages(newMessages);\n    setUserInput(''); // Clear input box\n\n    // Simulate a bot response (AI logic can go here)\n    setTimeout(() => {\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { sender: 'bot', text: 'This is an automated response.' }\n      ]);\n    }, 1000);\n  };\n\n  // Scroll to the bottom whenever the messages array is updated\n  useEffect(() => {\n    if (conversationRef.current) {\n      conversationRef.current.scrollTop = conversationRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  // Toggle chatbot visibility\n  const toggleChatbot = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <>\n      {/* Chat Button */}\n      <button className=\"chat-button\" onClick={toggleChatbot}></button>\n\n      {/* Chatbot Widget */}\n      <div className={`chatbot-widget card ${isOpen ? 'open' : ''}`}>\n        {/* Header */}\n        <div className=\"card-header text-center\">\n          <h5>AI Chatbot</h5>\n        </div>\n\n        {/* Chat Conversation Area */}\n        <div className=\"card-body chatbot-conversation\" ref={conversationRef}>\n          {messages.map((message, index) => (\n            <div key={index} className={`message ${message.sender}`}>\n              <div className={`bubble ${message.sender}`}>\n                {message.text}\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Input Section */}\n        <div className=\"card-footer d-flex align-items-center\">\n          <input\n            type=\"text\"\n            className=\"form-control me-2\"\n            placeholder=\"Type your message...\"\n            value={userInput}\n            onChange={(e) => setUserInput(e.target.value)}\n            onKeyDown={(e) => e.key === 'Enter' && handleSendMessage()}\n          />\n          <button className=\"btn btn-primary\" onClick={handleSendMessage}>\n            Send\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}